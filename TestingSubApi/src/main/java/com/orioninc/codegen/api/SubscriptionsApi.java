/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.orioninc.codegen.api;

import com.orioninc.codegen.model.Subscription;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-03-06T21:58:06.610273300+03:00[Europe/Moscow]")
@Validated
@Api(value = "subscriptions", description = "the subscriptions API")
public interface SubscriptionsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /subscriptions
     *
     * @param subscription  (optional)
     * @return OK (status code 200)
     *         or Bad Request (status code 400)
     */
    @ApiOperation(value = "", nickname = "subscriptionsPost", notes = "", response = String.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 400, message = "Bad Request", response = String.class) })
    @PostMapping(
        value = "/subscriptions",
        produces = { "text/plain" },
        consumes = { "application/json" }
    )
    ResponseEntity<String> subscriptionsPost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) Subscription subscription);

}
