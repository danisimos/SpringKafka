/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.orioninc.codegen.api;

import com.orioninc.codegen.model.ProcessedIntervalSubscriptions;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-03-06T21:58:06.174274800+03:00[Europe/Moscow]")
@Validated
@Api(value = "users", description = "the users API")
public interface UsersApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /users/ : get all processed intervals subscriptions by user information
     *
     * @param id  (optional)
     * @param firstName  (optional)
     * @param lastName  (optional)
     * @param age  (optional)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "get all processed intervals subscriptions by user information", nickname = "usersGet", notes = "", response = ProcessedIntervalSubscriptions.class, responseContainer = "List", tags={ "Users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ProcessedIntervalSubscriptions.class, responseContainer = "List") })
    @GetMapping(
        value = "/users/",
        produces = { "application/json" },
        consumes = { "application/x-www-form-urlencoded" }
    )
    default ResponseEntity<List<ProcessedIntervalSubscriptions>> usersGet(@ApiParam(value = "") @Valid @RequestPart(value = "id", required = false)  Integer id, @ApiParam(value = "") @Valid @RequestPart(value = "firstName", required = false)  String firstName, @ApiParam(value = "") @Valid @RequestPart(value = "lastName", required = false)  String lastName, @ApiParam(value = "") @Valid @RequestPart(value = "age", required = false)  Integer age) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"averageWeekCount\" : 1, \"interval\" : { \"timestampTo\" : \"\", \"timestampFrom\" : \"\" }, \"user\" : { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"id\" : 0, \"age\" : 6 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /users/{id} : get all processed intervals subscriptions by user id
     *
     * @param id timestamp of from of interval (required)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "get all processed intervals subscriptions by user id", nickname = "usersIdGet", notes = "", response = ProcessedIntervalSubscriptions.class, responseContainer = "List", tags={ "Users", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ProcessedIntervalSubscriptions.class, responseContainer = "List") })
    @GetMapping(
        value = "/users/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<ProcessedIntervalSubscriptions>> usersIdGet(@ApiParam(value = "timestamp of from of interval",required=true) @PathVariable("id") Integer id) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"averageWeekCount\" : 1, \"interval\" : { \"timestampTo\" : \"\", \"timestampFrom\" : \"\" }, \"user\" : { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"id\" : 0, \"age\" : 6 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
