/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.orioninc.codegen.api;

import com.orioninc.codegen.model.ProcessedIntervalSubscriptions;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-03-06T21:58:06.174274800+03:00[Europe/Moscow]")
@Validated
@Api(value = "intervals", description = "the intervals API")
public interface IntervalsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /intervals/from={from}&to={to} : This gets all intervals by given interval
     *
     * @param from timestamp of from of interval (required)
     * @param to timestamp of to of interval (required)
     * @return OK (status code 200)
     *         or BAD REQUEST (status code 400)
     */
    @ApiOperation(value = "This gets all intervals by given interval", nickname = "intervalsFromfromtotoGet", notes = "", response = ProcessedIntervalSubscriptions.class, responseContainer = "List", tags={ "Intervals", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ProcessedIntervalSubscriptions.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "BAD REQUEST", response = String.class) })
    @GetMapping(
        value = "/intervals/from={from}&to={to}",
        produces = { "application/json", "text/plain" }
    )
    default ResponseEntity<List<ProcessedIntervalSubscriptions>> intervalsFromfromtotoGet(@ApiParam(value = "timestamp of from of interval",required=true) @PathVariable("from") String from, @ApiParam(value = "timestamp of to of interval",required=true) @PathVariable("to") String to) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"averageWeekCount\" : 1, \"interval\" : { \"timestampTo\" : \"\", \"timestampFrom\" : \"\" }, \"user\" : { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"id\" : 0, \"age\" : 6 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
